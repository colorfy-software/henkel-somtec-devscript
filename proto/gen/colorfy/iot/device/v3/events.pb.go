// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: colorfy/iot/device/v3/events.proto

package iotdevpb

import (
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/any"
	_struct "github.com/golang/protobuf/ptypes/struct"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PropertyUpdatedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string    `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Property *Property `protobuf:"bytes,2,opt,name=property,proto3" json:"property,omitempty"`
}

func (x *PropertyUpdatedEvent) Reset() {
	*x = PropertyUpdatedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_colorfy_iot_device_v3_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyUpdatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyUpdatedEvent) ProtoMessage() {}

func (x *PropertyUpdatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_colorfy_iot_device_v3_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyUpdatedEvent.ProtoReflect.Descriptor instead.
func (*PropertyUpdatedEvent) Descriptor() ([]byte, []int) {
	return file_colorfy_iot_device_v3_events_proto_rawDescGZIP(), []int{0}
}

func (x *PropertyUpdatedEvent) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *PropertyUpdatedEvent) GetProperty() *Property {
	if x != nil {
		return x.Property
	}
	return nil
}

type FirmwareUpdatedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId          string             `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	InstalledFirmware *InstalledFirmware `protobuf:"bytes,3,opt,name=installed_firmware,json=installedFirmware,proto3" json:"installed_firmware,omitempty"`
	// Deprecated, use `installed_firmware` instead
	Firmware *Firmware `protobuf:"bytes,2,opt,name=firmware,proto3" json:"firmware,omitempty"`
}

func (x *FirmwareUpdatedEvent) Reset() {
	*x = FirmwareUpdatedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_colorfy_iot_device_v3_events_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirmwareUpdatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirmwareUpdatedEvent) ProtoMessage() {}

func (x *FirmwareUpdatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_colorfy_iot_device_v3_events_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirmwareUpdatedEvent.ProtoReflect.Descriptor instead.
func (*FirmwareUpdatedEvent) Descriptor() ([]byte, []int) {
	return file_colorfy_iot_device_v3_events_proto_rawDescGZIP(), []int{1}
}

func (x *FirmwareUpdatedEvent) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *FirmwareUpdatedEvent) GetInstalledFirmware() *InstalledFirmware {
	if x != nil {
		return x.InstalledFirmware
	}
	return nil
}

func (x *FirmwareUpdatedEvent) GetFirmware() *Firmware {
	if x != nil {
		return x.Firmware
	}
	return nil
}

type DeviceConnectedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId           string               `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Properties         []*Property          `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty"`
	InstalledFirmwares []*InstalledFirmware `protobuf:"bytes,4,rep,name=installed_firmwares,json=installedFirmwares,proto3" json:"installed_firmwares,omitempty"`
	// Deprecated, use `installed_firmwares` instead
	Firmwares []*Firmware `protobuf:"bytes,3,rep,name=firmwares,proto3" json:"firmwares,omitempty"`
}

func (x *DeviceConnectedEvent) Reset() {
	*x = DeviceConnectedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_colorfy_iot_device_v3_events_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceConnectedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceConnectedEvent) ProtoMessage() {}

func (x *DeviceConnectedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_colorfy_iot_device_v3_events_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceConnectedEvent.ProtoReflect.Descriptor instead.
func (*DeviceConnectedEvent) Descriptor() ([]byte, []int) {
	return file_colorfy_iot_device_v3_events_proto_rawDescGZIP(), []int{2}
}

func (x *DeviceConnectedEvent) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DeviceConnectedEvent) GetProperties() []*Property {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *DeviceConnectedEvent) GetInstalledFirmwares() []*InstalledFirmware {
	if x != nil {
		return x.InstalledFirmwares
	}
	return nil
}

func (x *DeviceConnectedEvent) GetFirmwares() []*Firmware {
	if x != nil {
		return x.Firmwares
	}
	return nil
}

type ErrorEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string               `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Time     *timestamp.Timestamp `protobuf:"bytes,4,opt,name=time,proto3" json:"time,omitempty"`
	Code     string               `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`
	Message  string               `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ErrorEvent) Reset() {
	*x = ErrorEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_colorfy_iot_device_v3_events_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorEvent) ProtoMessage() {}

func (x *ErrorEvent) ProtoReflect() protoreflect.Message {
	mi := &file_colorfy_iot_device_v3_events_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorEvent.ProtoReflect.Descriptor instead.
func (*ErrorEvent) Descriptor() ([]byte, []int) {
	return file_colorfy_iot_device_v3_events_proto_rawDescGZIP(), []int{3}
}

func (x *ErrorEvent) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *ErrorEvent) GetTime() *timestamp.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *ErrorEvent) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ErrorEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type LogEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string               `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Time     *timestamp.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Name     string               `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Params   *_struct.Struct      `protobuf:"bytes,4,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *LogEvent) Reset() {
	*x = LogEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_colorfy_iot_device_v3_events_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEvent) ProtoMessage() {}

func (x *LogEvent) ProtoReflect() protoreflect.Message {
	mi := &file_colorfy_iot_device_v3_events_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEvent.ProtoReflect.Descriptor instead.
func (*LogEvent) Descriptor() ([]byte, []int) {
	return file_colorfy_iot_device_v3_events_proto_rawDescGZIP(), []int{4}
}

func (x *LogEvent) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *LogEvent) GetTime() *timestamp.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *LogEvent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LogEvent) GetParams() *_struct.Struct {
	if x != nil {
		return x.Params
	}
	return nil
}

type CoreDumpEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string               `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Time     *timestamp.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	// Optional, ex: station, ball
	DeviceType string `protobuf:"bytes,3,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
	DumpName   string `protobuf:"bytes,4,opt,name=dump_name,json=dumpName,proto3" json:"dump_name,omitempty"`
	DumpImage  []byte `protobuf:"bytes,5,opt,name=dump_image,json=dumpImage,proto3" json:"dump_image,omitempty"`
}

func (x *CoreDumpEvent) Reset() {
	*x = CoreDumpEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_colorfy_iot_device_v3_events_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreDumpEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreDumpEvent) ProtoMessage() {}

func (x *CoreDumpEvent) ProtoReflect() protoreflect.Message {
	mi := &file_colorfy_iot_device_v3_events_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreDumpEvent.ProtoReflect.Descriptor instead.
func (*CoreDumpEvent) Descriptor() ([]byte, []int) {
	return file_colorfy_iot_device_v3_events_proto_rawDescGZIP(), []int{5}
}

func (x *CoreDumpEvent) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *CoreDumpEvent) GetTime() *timestamp.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *CoreDumpEvent) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *CoreDumpEvent) GetDumpName() string {
	if x != nil {
		return x.DumpName
	}
	return ""
}

func (x *CoreDumpEvent) GetDumpImage() []byte {
	if x != nil {
		return x.DumpImage
	}
	return nil
}

var File_colorfy_iot_device_v3_events_proto protoreflect.FileDescriptor

var file_colorfy_iot_device_v3_events_proto_rawDesc = []byte{
	0x0a, 0x22, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x66, 0x79, 0x2f, 0x69, 0x6f, 0x74, 0x2f, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x33, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x66, 0x79, 0x2e, 0x69, 0x6f,
	0x74, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x33, 0x1a, 0x22, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x66, 0x79, 0x2f, 0x69, 0x6f, 0x74, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f,
	0x76, 0x33, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x70, 0x0a, 0x14, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x3b,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x66, 0x79, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x33, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x22, 0xc9, 0x01, 0x0a, 0x14,
	0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x57, 0x0a, 0x12, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x66,
	0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x66, 0x79, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x33, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x46,
	0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x52, 0x11, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x65, 0x64, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x66, 0x69,
	0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x66, 0x79, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x33, 0x2e, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x52, 0x08, 0x66,
	0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x22, 0x8e, 0x02, 0x0a, 0x14, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x3f, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x66, 0x79, 0x2e, 0x69, 0x6f, 0x74, 0x2e,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x33, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x59,
	0x0a, 0x13, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x72, 0x6d,
	0x77, 0x61, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x66, 0x79, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x33, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x46, 0x69, 0x72,
	0x6d, 0x77, 0x61, 0x72, 0x65, 0x52, 0x12, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64,
	0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x09, 0x66, 0x69, 0x72,
	0x6d, 0x77, 0x61, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x66, 0x79, 0x2e, 0x69, 0x6f, 0x74, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x33, 0x2e, 0x46, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x52, 0x09, 0x66,
	0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x0a, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0x9c, 0x01, 0x0a, 0x08, 0x4c, 0x6f, 0x67,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0xb9, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x72, 0x65,
	0x44, 0x75, 0x6d, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x75, 0x6d, 0x70, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x6d, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x75, 0x6d, 0x70, 0x5f, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x64, 0x75, 0x6d, 0x70, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x42, 0x3c, 0x5a, 0x3a, 0x62, 0x69, 0x74, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x66, 0x79, 0x2f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x66, 0x79, 0x2d, 0x69, 0x6f, 0x74, 0x2d, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x3b, 0x69, 0x6f, 0x74, 0x64, 0x65, 0x76, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_colorfy_iot_device_v3_events_proto_rawDescOnce sync.Once
	file_colorfy_iot_device_v3_events_proto_rawDescData = file_colorfy_iot_device_v3_events_proto_rawDesc
)

func file_colorfy_iot_device_v3_events_proto_rawDescGZIP() []byte {
	file_colorfy_iot_device_v3_events_proto_rawDescOnce.Do(func() {
		file_colorfy_iot_device_v3_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_colorfy_iot_device_v3_events_proto_rawDescData)
	})
	return file_colorfy_iot_device_v3_events_proto_rawDescData
}

var file_colorfy_iot_device_v3_events_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_colorfy_iot_device_v3_events_proto_goTypes = []interface{}{
	(*PropertyUpdatedEvent)(nil), // 0: colorfy.iot.device.v3.PropertyUpdatedEvent
	(*FirmwareUpdatedEvent)(nil), // 1: colorfy.iot.device.v3.FirmwareUpdatedEvent
	(*DeviceConnectedEvent)(nil), // 2: colorfy.iot.device.v3.DeviceConnectedEvent
	(*ErrorEvent)(nil),           // 3: colorfy.iot.device.v3.ErrorEvent
	(*LogEvent)(nil),             // 4: colorfy.iot.device.v3.LogEvent
	(*CoreDumpEvent)(nil),        // 5: colorfy.iot.device.v3.CoreDumpEvent
	(*Property)(nil),             // 6: colorfy.iot.device.v3.Property
	(*InstalledFirmware)(nil),    // 7: colorfy.iot.device.v3.InstalledFirmware
	(*Firmware)(nil),             // 8: colorfy.iot.device.v3.Firmware
	(*timestamp.Timestamp)(nil),  // 9: google.protobuf.Timestamp
	(*_struct.Struct)(nil),       // 10: google.protobuf.Struct
}
var file_colorfy_iot_device_v3_events_proto_depIdxs = []int32{
	6,  // 0: colorfy.iot.device.v3.PropertyUpdatedEvent.property:type_name -> colorfy.iot.device.v3.Property
	7,  // 1: colorfy.iot.device.v3.FirmwareUpdatedEvent.installed_firmware:type_name -> colorfy.iot.device.v3.InstalledFirmware
	8,  // 2: colorfy.iot.device.v3.FirmwareUpdatedEvent.firmware:type_name -> colorfy.iot.device.v3.Firmware
	6,  // 3: colorfy.iot.device.v3.DeviceConnectedEvent.properties:type_name -> colorfy.iot.device.v3.Property
	7,  // 4: colorfy.iot.device.v3.DeviceConnectedEvent.installed_firmwares:type_name -> colorfy.iot.device.v3.InstalledFirmware
	8,  // 5: colorfy.iot.device.v3.DeviceConnectedEvent.firmwares:type_name -> colorfy.iot.device.v3.Firmware
	9,  // 6: colorfy.iot.device.v3.ErrorEvent.time:type_name -> google.protobuf.Timestamp
	9,  // 7: colorfy.iot.device.v3.LogEvent.time:type_name -> google.protobuf.Timestamp
	10, // 8: colorfy.iot.device.v3.LogEvent.params:type_name -> google.protobuf.Struct
	9,  // 9: colorfy.iot.device.v3.CoreDumpEvent.time:type_name -> google.protobuf.Timestamp
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_colorfy_iot_device_v3_events_proto_init() }
func file_colorfy_iot_device_v3_events_proto_init() {
	if File_colorfy_iot_device_v3_events_proto != nil {
		return
	}
	file_colorfy_iot_device_v3_models_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_colorfy_iot_device_v3_events_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyUpdatedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_colorfy_iot_device_v3_events_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirmwareUpdatedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_colorfy_iot_device_v3_events_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceConnectedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_colorfy_iot_device_v3_events_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_colorfy_iot_device_v3_events_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_colorfy_iot_device_v3_events_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoreDumpEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_colorfy_iot_device_v3_events_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_colorfy_iot_device_v3_events_proto_goTypes,
		DependencyIndexes: file_colorfy_iot_device_v3_events_proto_depIdxs,
		MessageInfos:      file_colorfy_iot_device_v3_events_proto_msgTypes,
	}.Build()
	File_colorfy_iot_device_v3_events_proto = out.File
	file_colorfy_iot_device_v3_events_proto_rawDesc = nil
	file_colorfy_iot_device_v3_events_proto_goTypes = nil
	file_colorfy_iot_device_v3_events_proto_depIdxs = nil
}
